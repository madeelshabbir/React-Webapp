{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/FooterComponent.js","components/GamesInfoComponent.js","components/SupportComponent.js","components/CartComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/games.js","redux/tickets.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","setState","isNavOpen","state","toggleModal1","isModal1Open","toggleModal2","isModal2Open","toggleModal3","isModal3Open","handleLogin","event","toggleModal","alert","username","value","password","remember","checked","preventDefault","handleUserCreation","usernamec","email","passwordc","bind","Fragment","dark","expand","className","fixed","onClick","this","src","height","width","alt","href","style","position","to","isOpen","navbar","role","type","id","name","placeholder","onSubmit","row","htmlFor","md","size","offset","innerRef","input","xs","class","location","margin","variant","borderBottom","backgroundImage","backgroundRepeat","backgroundPosition","Component","Loading","baseUrl","Home","previous","animating","nextIndex","activeIndex","games","length","next","goToIndex","newIndex","gameCard","game","isLoading","errMsg","textAlign","caroCard","price","slides","map","onExiting","onExited","key","tiles","color","items","onClickHandler","direction","directionText","Footer","GamesInfo","gameMedia","marginBottom","padding","backgroundColor","object","body","paddingTop","heading","videoMedia","ytsrc","title","active","required","val","maxLength","len","minLength","validEmail","test","Support","handleSubmit","values","postTicket","topic","details","resetTicketForm","tickets","ticket","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","marginTop","model","text","validators","show","messages","textarea","rows","Cart","gamesLoading","gamesFailed","errmsg","payload","addGames","ticketsFailed","addTickets","Main","fetchGames","fetchTickets","exact","path","component","match","filter","parseInt","params","gameId","ticketsErrMsg","withRouter","connect","dispatch","newTicket","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","catch","console","log","actions","reset","Games","action","Tickets","errMess","concat","InitialTicket","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34aa4a78.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, Form, FormGroup, Label, Col, Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModal1Open: false,\r\n            isModal2Open: false,\r\n            isModal3Open: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        this.toggleModal2 = this.toggleModal2.bind(this);\r\n        this.toggleModal3 = this.toggleModal3.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleUserCreation = this.handleUserCreation.bind(this);\r\n    }\r\n\r\n    toggleNav = () => {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal1 = () => {\r\n        this.setState({\r\n            isModal1Open: !this.state.isModal1Open\r\n        });\r\n    }\r\n    \r\n    toggleModal2 = () => {\r\n        this.setState({\r\n            isModal2Open: !this.state.isModal2Open\r\n        });\r\n    }\r\n\r\n    toggleModal3 = () => {\r\n        this.setState({\r\n            isModal3Open: !this.state.isModal3Open\r\n        });\r\n    }\r\n\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUserCreation = (event) => {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.usernamec.value + \" Email: \" + this.email.value\r\n            + \" Password: \" + this.passwordc.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <React.Fragment>\r\n            <Navbar dark expand=\"md\" className=\"nav-bar sticky-nav\" fixed='top'>\r\n                <div className=\"container-fluid\">\r\n                    <NavbarToggler onClick={this.toggleModal3}>\r\n                        <img src={'../assets/images/navtoggler.png'} height=\"30\" width=\"30\" alt='Toggler' />\r\n                    </NavbarToggler>\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src={'../assets/images/logo.png'} height=\"50\" width=\"50\" alt='Gaming Garage' />\r\n                    </NavbarBrand>\r\n                    <span className=\"order-sm-2\">\r\n                        <Link style={{ position: 'right' }} onClick={this.toggleModal1} className=\"nav-link\" to='#'><span className=\"fa fa-sign-in\"></span> Login</Link>\r\n                    </span>\r\n                    <Collapse isOpen={false} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem className=\"ml-5 ml-md-0\">\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-5 ml-md-0\">\r\n                                <NavLink className=\"nav-link\" to='/cart'><span className=\"fa fa-shopping-cart fa-lg\"></span> Cart</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-5 ml-md-0\">\r\n                                <NavLink className=\"nav-link\" to='/support'><span className=\"fa fa-address-card fa-lg\"></span> Support</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                    <span className=\"btn-group order-sm-1 mx-auto\" role=\"group\">\r\n                        <Input type=\"search\" id=\"search\" name=\"search\" placeholder=\"Search\" />\r\n                        <Button>Search</Button>\r\n                    </span>\r\n                </div>\r\n            </Navbar>\r\n            <Modal isOpen={this.state.isModal1Open} onSubmit={this.handleLogin}>\r\n                <ModalHeader>\r\n                    <Button onClick={this.toggleModal1} className=\"close\">&times;</Button>\r\n                    <h4><span className=\"fa fa-sign-in\"></span> Login</h4>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup row>\r\n                            <Label className=\"modal-label\" htmlFor=\"username\" md={{size: 2, offset: 2}}>Username</Label>\r\n                            <Col md={6}>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" innerRef={(input) => this.username = input}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label className=\"modal-label\" htmlFor=\"password\" md={{size: 2, offset: 2}}>Password</Label>\r\n                            <Col md={6}>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" innerRef={(input) => this.password = input}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col xs={{offset: 2}}>\r\n                                <Input class=\"form-check-input\" type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}/>\r\n                                <Label class=\"form-check-label\"> Remember me</Label>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <a href='#' onClick={() => { this.toggleModal1(); this.toggleModal2();}} className=\"create-account\" md={{offset:2}}>Don't have account</a>\r\n                    <Button onClick={this.toggleModal1} type=\"button\" class=\"btn btn-secondary btn-sm ml-auto\">Cancel</Button>\r\n                    <Button type=\"submit\" class=\"btn btn-primary btn-sm ml-1\">Sign in</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal isOpen={this.state.isModal2Open}>\r\n                <ModalHeader>\r\n                    <Button onClick={this.toggleModal2} className=\"close\">&times;</Button>\r\n                    <h4><span className=\"fa fa-user\"></span> Create User</h4>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup row>\r\n                            <Label className=\"modal-label\" htmlFor=\"username\" md={{size: 2, offset: 2}}>Username</Label>\r\n                            <Col md={6}>\r\n                                <Input type=\"text\" id=\"username\" name=\"usernamec\" placeholder=\"Username\" innerRef={(input) => this.usernamec = input} />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label className=\"modal-label\" htmlFor=\"email\" md={{size: 2, offset: 2}}>Email</Label>\r\n                            <Col md={6}>\r\n                                <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" innerRef={(input) => this.email = input} />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label className=\"modal-label\" htmlFor=\"password\" md={{size: 2, offset: 2}}>Password</Label>\r\n                            <Col md={6}>\r\n                                <Input type=\"password\" id=\"password\" name=\"passwordc\" placeholder=\"Password\" innerRef={(input) => this.passwordc = input}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <a href='#' onClick={() => { this.toggleModal1(); this.toggleModal2();}} className=\"create-account\" md={{offset:2}}>Create an account</a>\r\n                    <Button onClick={this.toggleModal2} type=\"button\" class=\"btn btn-secondary btn-sm ml-auto\">Cancel</Button>\r\n                    <Button type=\"submit\" class=\"btn btn-primary btn-sm ml-1\">Sign up</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal role=\"dialog\" location={this.props.location} style={{margin: '0px'}} isOpen={this.state.isModal3Open}>\r\n                <div className=\"modal-three\">\r\n                <div variant=\"raised\" onClick={this.toggleModal3} className=\"close close-sz\"/>\r\n                <ModalBody>\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src={'../assets/images/logo.png'} height=\"100\" width=\"100\" alt='Gaming Garage' />\r\n                    </NavbarBrand>\r\n                    <Nav navbar>\r\n                            <NavItem style={{borderBottom: '1px solid #0C0F0A'}}>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={{borderBottom: '1px solid #0C0F0A'}}>\r\n                                <NavLink className=\"nav-link\" to='/cart'><span className=\"fa fa-shopping-cart fa-lg\"></span> Cart</NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={{borderBottom: '1px solid #0C0F0A'}}>\r\n                                <NavLink className=\"nav-link\" to='/support'><span className=\"fa fa-address-card fa-lg\"></span> Support</NavLink>\r\n                            </NavItem>\r\n                     </Nav>\r\n                </ModalBody>\r\n                </div>\r\n            </Modal>\r\n            <Jumbotron style={{ backgroundImage: `url(${'../assets/images/jumback.png'})`, backgroundRepeat: 'no-repeat', backgroundPosition: 'right'}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Gaming Garage</h1>\r\n                            <p>A place where dreams begin!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n        </React.Fragment>\r\n       );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Loading(){\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","export const baseUrl = 'http://localhost:3001/';","import React, { Component } from 'react';\r\nimport { Container, Carousel, CarouselItem, CarouselControl,  CarouselIndicators, Card, CardTitle, CardSubtitle, CardImg, CardBody, Row, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            activeIndex: 0\r\n        };\r\n        this.previous = this.previous.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n    }\r\n    previous = () => {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === 0 ? this.props.games.length - 1 : this.state.activeIndex - 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n    next = () => {\r\n      if (this.animating) return;\r\n      const nextIndex = this.state.activeIndex === this.props.games.length - 1 ? 0 : this.state.activeIndex + 1;\r\n      this.setState({ activeIndex: nextIndex });\r\n    }\r\n    goToIndex = (newIndex) => {\r\n      if (this.state.animating) return;\r\n      this.setState({ activeIndex: newIndex });\r\n    }\r\n    gameCard = (game, isLoading, errMsg) => {\r\n      if (isLoading)\r\n          return(\r\n                <Loading />\r\n          );\r\n      else if (errMsg)\r\n          return(\r\n                  <h4>{errMsg}</h4>\r\n          );\r\n      else \r\n      return(\r\n        <Card>\r\n            <Link className=\"link\" to={`/home/${game.id}`}>\r\n            <CardImg width=\"100%\" src={baseUrl + game.src} alt={game.name} />\r\n              <CardBody>\r\n                <CardTitle style={{textAlign: 'center'}}>{game.name}</CardTitle>\r\n              </CardBody>\r\n            </Link>\r\n        </Card>);\r\n    }\r\n    caroCard = (game, isLoading, errMsg) => {\r\n      if (isLoading)\r\n          return(\r\n                <Loading />\r\n          );\r\n      else if (errMsg)\r\n          return(\r\n                  <h4>{errMsg}</h4>\r\n          );\r\n      else \r\n      return(\r\n        <Card>\r\n          <Link className=\"link\" to={`/home/${game.id}`}>\r\n            <CardImg width=\"100%\" src={baseUrl + game.src} alt={game.name} />\r\n            <CardBody>\r\n              <CardTitle>{game.name}</CardTitle>\r\n              <CardSubtitle>{game.price+' pkr'}</CardSubtitle>\r\n            </CardBody>\r\n          </Link>\r\n        </Card>\r\n      );\r\n    }\r\n    render(){\r\n      const slides = this.props.games.map((game) => {\r\n        return (\r\n          <CarouselItem\r\n            onExiting={() => {\r\n              this.animating = true;\r\n            }}\r\n            onExited={() =>{\r\n              this.animating = false;\r\n            }}\r\n            key={game.src}\r\n          >\r\n          {this.caroCard(game, this.props.isLoading, this.props.errMsg)}\r\n          </CarouselItem>\r\n        );\r\n      });\r\n      const tiles = this.props.games.map((game) => {\r\n        return(\r\n          <Container className=\"col-md-3 col-sm-6\">\r\n            {this.gameCard(game, this.props.isLoading, this.props.errMsg)}\r\n          </Container>\r\n        );\r\n      });\r\n      return(\r\n            <React.Fragment>\r\n              <Container>\r\n                <Row>\r\n                  <Breadcrumb>\r\n                    <BreadcrumbItem><Link style={{color: '#0C0F0A'}} to=\"/home\">Home</Link></BreadcrumbItem>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Carousel\r\n                    activeIndex={this.state.activeIndex}\r\n                    next={this.next}\r\n                    previous={this.previous}\r\n                  >\r\n                    <CarouselIndicators items={this.props.games} activeIndex={this.state.activeIndex} onClickHandler={this.goToIndex} />\r\n                      {slides}\r\n                    <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous}/>\r\n                    <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n                  </Carousel>\r\n                <Row className=\"tiles\">\r\n                  {tiles}\r\n                </Row>\r\n              </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"/home\">Home</a></li>\r\n                        <li><a href=\"/about\">About</a></li>\r\n                        <li><a href=\"/support\">Support</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              Ghaziabad, Lahore Cantt<br />\r\n\t\t              Lahore, Pakistan<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +92 321 1142127<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:madeelshabbirs@gmail.com\"> madeelshabbirs@gmail.com</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Gaming Garage</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Container, Row, Media, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nclass GamesInfo extends Component{\r\n    gameMedia = (game) => {\r\n        return(\r\n            <Media style={{marginBottom: '10px', padding: '20px', backgroundColor: 'black', color: '#fbff12'}}>\r\n                <div className=\"col-md-6\">\r\n                    <Media object width=\"100%\" src={baseUrl + game.src} alt={game.name}/>                \r\n                </div>\r\n                <Media body className=\"col-md-auto\" style={{paddingTop: '20px'}}>\r\n                    <div>\r\n                        <Media heading>{game.name}</Media>\r\n                        <p>{game.price+' pkr'}</p>\r\n                        <Button>Add to Cart</Button>\r\n                    </div>\r\n                </Media>\r\n            </Media>\r\n        );\r\n    }\r\n    videoMedia = (game) => {\r\n        return(\r\n            <div style={{marginBottom: '10px'}} className=\"embed-responsive embed-responsive-21by9\">\r\n                <iframe className=\"embed-responsive-item\" src={game.ytsrc} alt={game.name} title={game.name}/>\r\n            </div>\r\n        )\r\n    }\r\n    render(){\r\n        if (this.props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMsg) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{this.props.errMsg}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(this.props.game != null)\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active><Link to={`/home/${this.props.game.id}`}>{this.props.game.name}</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </Row>\r\n                {this.gameMedia(this.props.game, this.props.isLoading, this.props.errMsg)}\r\n                {this.videoMedia(this.props.game, this.props.isLoading, this.props.errMsg)}\r\n            </Container>\r\n        );\r\n        else  return(<React.Fragment></React.Fragment>);\r\n    }\r\n}\r\nexport default GamesInfo;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Jumbotron, Label, Button, Media } from 'reactstrap';\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n//const isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Support extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.props.postTicket(values.topic, values.email, values.details);\r\n        this.props.resetTicketForm();\r\n    }\r\n\r\n    render(){\r\n        const tickets = this.props.tickets.map((ticket) => {\r\n            return(\r\n                <Media key={ticket.email} style={{marginBottom: '10px', padding: '20px', backgroundColor: 'black', color: '#fbff12'}}>\r\n                <Media body className=\"col-md-auto\" style={{paddingTop: '20px'}}>\r\n                    <div>\r\n                        <Media heading>{ticket.topic}</Media>\r\n                        <p>{\"Email: \"+ticket.email}</p>\r\n                        <p>{\"Date: \"+new Intl.DateTimeFormat(\"en-US\", {year: \"numeric\", month: \"short\", day: \"2-digit\"}).format(new Date(Date.parse(ticket.date)))}</p>\r\n                        <p>{ticket.details}</p>\r\n                    </div>\r\n                </Media>\r\n            </Media>\r\n            );\r\n        })\r\n        return(\r\n            <Container>\r\n                <Jumbotron style={{marginTop: '20px', marginBottom: '20px'}}>\r\n                    <Row class=\"row-content\">\r\n                        <Col xs={12} style={{textAlign: 'center'}}>\r\n                            <h1>Create a Ticket</h1>\r\n                        </Col>\r\n                    </Row>\r\n                </Jumbotron>\r\n                <Jumbotron style={{marginTop: '20px', marginBottom: '20px'}}>\r\n                    <Row class=\"row-content\">\r\n                        <Col className=\"col-12 col-md-9\">\r\n                            <LocalForm model=\"ticket\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\" style={{marginTop: '20px'}}>\r\n                                    <Label htmlFor=\"topic\" md={2}><h4>Topic:</h4></Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".topic\" id=\"topic\" name=\"topic\"\r\n                                            placeholder=\"Enter Topic\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(2), maxLength: maxLength(50)\r\n                                            }}/>\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".topic\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                minLength: 'Must be greater than 1 characters',\r\n                                                maxLength: 'Must be 50 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\" style={{marginTop: '20px'}}>\r\n                                    <Label htmlFor=\"email\" md={2}><h4>Email:</h4></Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                            placeholder=\"Enter Your Email\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, validEmail\r\n                                            }}/>\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".email\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required! ',\r\n                                                    validEmail: 'Invalid Email Address'\r\n                                            }}\r\n                                            />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\" style={{marginTop: '20px'}}>\r\n                                    <Label htmlFor=\"details\" md={2}><h4>Details:</h4></Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".details\" id=\"details\" name=\"details\"\r\n                                            rows=\"12\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(5), maxLength: maxLength(1000)\r\n                                            }}/>\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".details\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required! ',\r\n                                                    minLength: 'Must be greater than 4 characters',\r\n                                                    maxLength: 'Must be 500 characters or less'\r\n                                            }}\r\n                                            />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit Ticket\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </Col>\r\n                    </Row>\r\n                </Jumbotron>\r\n                {tickets}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Support;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\r\nclass Cart extends Component{\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Jumbotron style={{marginTop: '20px', marginBottom: '20px'}}>\r\n                    <Row class=\"row-content\">\r\n                        <Col xs={12} style={{textAlign: 'center'}}>\r\n                            <h1>Your Cart is Empty</h1>\r\n                        </Col>\r\n                    </Row>\r\n                </Jumbotron>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addTicket = (ticket) => ({\r\n    type: ActionTypes.ADD_TICKET,\r\n    payload: ticket\r\n});\r\n\r\nexport const postTicket = (topic, email, details) => (dispatch) => {\r\n    const newTicket = {\r\n        topic: topic,\r\n        email: email,\r\n        details: details\r\n    };\r\n    newTicket.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'tickets', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newTicket),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmsg = new Error(error.message);\r\n                throw errmsg;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addTicket(response)))\r\n        .catch(error =>  { console.log('post tickets', error.message); alert('Your ticket could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchGames = () => (dispatch) => {\r\n    dispatch(gamesLoading(true));\r\n    return fetch(baseUrl + 'games')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmsg = new Error(error.message);\r\n                throw errmsg;\r\n        })\r\n        .then(response => response.json())\r\n        .then(games => dispatch(addGames(games)))\r\n        .catch(error => dispatch(gamesFailed(error.message)));\r\n};\r\n\r\nexport const gamesLoading = () => ({\r\n    type: ActionTypes.GAMES_LOADING\r\n});\r\n\r\nexport const gamesFailed = (errmsg) => ({\r\n    type: ActionTypes.GAMES_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const fetchTickets = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'tickets')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmsg = new Error(error.message);\r\n                throw errmsg;\r\n        })\r\n        .then(response => response.json())\r\n        .then(tickets => dispatch(addTickets(tickets)))\r\n        .catch(error => dispatch(ticketsFailed(error.message)));\r\n};\r\n\r\nexport const addGames = (games) => ({\r\n    type: ActionTypes.ADD_GAMES,\r\n    payload: games\r\n});\r\n\r\nexport const ticketsFailed = (errmsg) => ({\r\n    type: ActionTypes.TICKETS_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const addTickets = (tickets) => ({\r\n    type: ActionTypes.ADD_TICKETS,\r\n    payload: tickets\r\n});","export const ADD_TICKET = 'ADD_TICKET';\r\nexport const GAMES_LOADING = 'GAMES_LOADING';\r\nexport const GAMES_FAILED = 'GAMES_FAILED';\r\nexport const ADD_GAMES = 'ADD_GAMES';\r\nexport const ADD_TICKETS = 'ADD_TICKETS';\r\nexport const TICKETS_FAILED = 'TICKETS_FAILED';","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Home from './HomeComponent';\r\nimport Footer from './FooterComponent';\r\nimport GamesInfo from './GamesInfoComponent';\r\nimport Support from './SupportComponent';\r\nimport Cart from './CartComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postTicket, fetchGames, fetchTickets } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    games: state.games,\r\n    tickets: state.tickets\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postTicket: (topic, email, details) => dispatch(postTicket(topic, email, details)),\r\n  fetchGames: () => dispatch(fetchGames()),\r\n  resetTicketForm: () => { dispatch(actions.reset('ticket'))},\r\n  fetchTickets: () => dispatch(fetchTickets())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchGames();\r\n    this.props.fetchTickets();\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div style={{backgroundColor: '#feffb5'}}>\r\n        <Header />\r\n            <Switch>\r\n            <Route exact path='/home' component={() => <Home \r\n              games={this.props.games.games}\r\n              isLoading={this.props.games.isLoading}\r\n              errMsg={this.props.games.errMsg}\r\n            /> } />\r\n            <Route path='/home/:gameId' component={({match}) => { return(\r\n                <GamesInfo\r\n                  game={this.props.games.games.filter((game) => game.id === parseInt(match.params.gameId,10))[0]}\r\n                  isLoading={this.props.games.isLoading}\r\n                  errMsg={this.props.games.errMsg} \r\n                />\r\n              );}} />\r\n            <Route exact path='/cart' component={() => <Cart /> } />\r\n            <Route exact path='/support' component={() => <Support\r\n            tickets={this.props.tickets.tickets}\r\n            ticketsErrMsg={this.props.tickets.errMsg}\r\n            postTicket={this.props.postTicket}\r\n            resetTicketForm={this.props.resetTicketForm}/> } />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Games = (state = {\r\n    isLoading: true,\r\n    errMsg: null,\r\n    games:[]\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_GAMES:\r\n            return {...state, isLoading: false, errMsg: null, games: action.payload};\r\n\r\n        case ActionTypes.GAMES_LOADING:\r\n            return {...state, isLoading: true, errMsg: null, games: []}\r\n\r\n        case ActionTypes.GAMES_FAILED:\r\n            return {...state, isLoading: false, errMsg: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Tickets = (state = {\r\n    errMsg: null,\r\n    tickets: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_TICKETS:\r\n            return {...state, errMsg: null, tickets: action.payload};\r\n        case ActionTypes.TICKETS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n        case ActionTypes.ADD_TICKET:\r\n            var ticket = action.payload;\r\n            console.log(\"Ticket: \", ticket);\r\n            return {...state, tickets: state.tickets.concat(ticket)};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialTicket = {\r\n    topic: '',\r\n    email: '',\r\n    details: ''\r\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Games } from './games';\r\nimport { Tickets } from './tickets';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialTicket } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            games: Games,\r\n            tickets: Tickets,\r\n            ...createForms({\r\n                ticket: InitialTicket\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}